'use strict';

document.addEventListener('DOMContentLoaded', function () {
  var mapContainer = document.getElementById('map');
  var modalsSelector = document.querySelectorAll('.modal');
  var modalTriggers = document.querySelectorAll('.modal-trigger');
  var calculatorSelects = document.querySelectorAll('.calculator-select');

  // init scripts
  svg4everybody();
  modalsSelector.forEach(function (element) {
    $(element).iziModal();
  });

  modalTriggers.forEach(function (trigger) {
    trigger.addEventListener('click', function () {
      var id = this.dataset.open;
      var modal = document.querySelectorAll('.modal[data-modal=' + id + ']');
      $(modal).iziModal('open');
    });
  });

  calculatorSelects.forEach(function (select) {

    select.addEventListener('click', function () {
      select.classList.contains('active') ? select.classList.remove('active') : select.classList.add('active');
    });
  });

  if (mapContainer) {
    var init = function init() {
      var myMap = new ymaps.Map("map", {
        center: [60.028979, 30.331195],
        zoom: 16,
        controls: ["zoomControl"]
      });

      var myPlacemark = new ymaps.Placemark([60.028979, 30.331195], {
        balloonContent: "г. Санкт-Петербург, ул. Есенина 1к1, ст.м. Озерки"
      }, {
        iconImageHref: "/img/marker.svg",
        iconLayout: "default#image",
        iconImageSize: [42, 56],
        iconImageOffset: [-21, -56]
      });
      myMap.geoObjects.add(myPlacemark);

      mapContainer.querySelectorAll('.ymaps-2-1-77-ground-pane').forEach(function (element) {
        element.style.filter = 'grayscale(1)';
      });
    };
    ymaps.ready(init);
  }
});

// window.addEventListener('resize', () => {
//   console.log( window.innerWidth);
// })
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdDEuanMiXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwibWFwQ29udGFpbmVyIiwiZ2V0RWxlbWVudEJ5SWQiLCJtb2RhbHNTZWxlY3RvciIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJtb2RhbFRyaWdnZXJzIiwiY2FsY3VsYXRvclNlbGVjdHMiLCJzdmc0ZXZlcnlib2R5IiwiZm9yRWFjaCIsImVsZW1lbnQiLCIkIiwiaXppTW9kYWwiLCJ0cmlnZ2VyIiwiaWQiLCJkYXRhc2V0Iiwib3BlbiIsIm1vZGFsIiwic2VsZWN0IiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJyZW1vdmUiLCJhZGQiLCJpbml0IiwibXlNYXAiLCJ5bWFwcyIsIk1hcCIsImNlbnRlciIsInpvb20iLCJjb250cm9scyIsIm15UGxhY2VtYXJrIiwiUGxhY2VtYXJrIiwiYmFsbG9vbkNvbnRlbnQiLCJpY29uSW1hZ2VIcmVmIiwiaWNvbkxheW91dCIsImljb25JbWFnZVNpemUiLCJpY29uSW1hZ2VPZmZzZXQiLCJnZW9PYmplY3RzIiwic3R5bGUiLCJmaWx0ZXIiLCJyZWFkeSJdLCJtYXBwaW5ncyI6Ijs7QUFDQUEsU0FBU0MsZ0JBQVQsQ0FBMEIsa0JBQTFCLEVBQThDLFlBQUk7QUFDaEQsTUFBTUMsZUFBZUYsU0FBU0csY0FBVCxDQUF3QixLQUF4QixDQUFyQjtBQUNBLE1BQU1DLGlCQUFrQkosU0FBU0ssZ0JBQVQsQ0FBMEIsUUFBMUIsQ0FBeEI7QUFDQSxNQUFNQyxnQkFBZ0JOLFNBQVNLLGdCQUFULENBQTBCLGdCQUExQixDQUF0QjtBQUNBLE1BQU1FLG9CQUFvQlAsU0FBU0ssZ0JBQVQsQ0FBMEIsb0JBQTFCLENBQTFCOztBQUVBO0FBQ0FHO0FBQ0FKLGlCQUFlSyxPQUFmLENBQXVCLFVBQUNDLE9BQUQsRUFBWTtBQUNqQ0MsTUFBRUQsT0FBRixFQUFXRSxRQUFYO0FBQ0QsR0FGRDs7QUFJQU4sZ0JBQWNHLE9BQWQsQ0FBc0IsVUFBQ0ksT0FBRCxFQUFXO0FBQy9CQSxZQUFRWixnQkFBUixDQUF5QixPQUF6QixFQUFrQyxZQUFXO0FBQzNDLFVBQU1hLEtBQUssS0FBS0MsT0FBTCxDQUFhQyxJQUF4QjtBQUNBLFVBQU1DLFFBQVFqQixTQUFTSyxnQkFBVCx3QkFBK0NTLEVBQS9DLE9BQWQ7QUFDQUgsUUFBRU0sS0FBRixFQUFTTCxRQUFULENBQWtCLE1BQWxCO0FBQ0QsS0FKRDtBQUtELEdBTkQ7O0FBUUFMLG9CQUFrQkUsT0FBbEIsQ0FBMEIsVUFBQ1MsTUFBRCxFQUFVOztBQUVsQ0EsV0FBT2pCLGdCQUFQLENBQXdCLE9BQXhCLEVBQWlDLFlBQUk7QUFDbkNpQixhQUFPQyxTQUFQLENBQWlCQyxRQUFqQixDQUEwQixRQUExQixJQUNBRixPQUFPQyxTQUFQLENBQWlCRSxNQUFqQixDQUF3QixRQUF4QixDQURBLEdBQ29DSCxPQUFPQyxTQUFQLENBQWlCRyxHQUFqQixDQUFxQixRQUFyQixDQURwQztBQUVELEtBSEQ7QUFLRCxHQVBEOztBQVVBLE1BQUdwQixZQUFILEVBQWlCO0FBQ1gsUUFBTXFCLE9BQU8sU0FBU0EsSUFBVCxHQUFnQjtBQUMzQixVQUFNQyxRQUFRLElBQUlDLE1BQU1DLEdBQVYsQ0FBYyxLQUFkLEVBQXFCO0FBQ2pDQyxnQkFBUSxDQUFDLFNBQUQsRUFBWSxTQUFaLENBRHlCO0FBRWpDQyxjQUFNLEVBRjJCO0FBR2pDQyxrQkFBVSxDQUFDLGFBQUQ7QUFIdUIsT0FBckIsQ0FBZDs7QUFNQSxVQUFNQyxjQUFjLElBQUlMLE1BQU1NLFNBQVYsQ0FDbEIsQ0FBQyxTQUFELEVBQVksU0FBWixDQURrQixFQUVsQjtBQUNFQyx3QkFBZ0I7QUFEbEIsT0FGa0IsRUFLbEI7QUFDRUMsdUJBQWUsaUJBRGpCO0FBRUVDLG9CQUFZLGVBRmQ7QUFHRUMsdUJBQWUsQ0FBQyxFQUFELEVBQUssRUFBTCxDQUhqQjtBQUlFQyx5QkFBaUIsQ0FBQyxDQUFDLEVBQUYsRUFBTSxDQUFDLEVBQVA7QUFKbkIsT0FMa0IsQ0FBcEI7QUFZQVosWUFBTWEsVUFBTixDQUFpQmYsR0FBakIsQ0FBcUJRLFdBQXJCOztBQUVBNUIsbUJBQWFHLGdCQUFiLENBQThCLDJCQUE5QixFQUEyREksT0FBM0QsQ0FBbUUsVUFBQ0MsT0FBRCxFQUFXO0FBQzFFQSxnQkFBUTRCLEtBQVIsQ0FBY0MsTUFBZCxHQUF1QixjQUF2QjtBQUNILE9BRkQ7QUFHRCxLQXhCRDtBQXlCQWQsVUFBTWUsS0FBTixDQUFZakIsSUFBWjtBQUNEO0FBQ04sQ0ExREQ7O0FBNERBO0FBQ0E7QUFDQSIsImZpbGUiOiJzY3JpcHQxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKT0+e1xyXG4gIGNvbnN0IG1hcENvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXAnKTtcclxuICBjb25zdCBtb2RhbHNTZWxlY3RvciA9ICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubW9kYWwnKTtcclxuICBjb25zdCBtb2RhbFRyaWdnZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm1vZGFsLXRyaWdnZXInKTtcclxuICBjb25zdCBjYWxjdWxhdG9yU2VsZWN0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYWxjdWxhdG9yLXNlbGVjdCcpO1xyXG5cclxuICAvLyBpbml0IHNjcmlwdHNcclxuICBzdmc0ZXZlcnlib2R5KCk7XHJcbiAgbW9kYWxzU2VsZWN0b3IuZm9yRWFjaCgoZWxlbWVudCkgPT57XHJcbiAgICAkKGVsZW1lbnQpLml6aU1vZGFsKCk7XHJcbiAgfSk7XHJcblxyXG4gIG1vZGFsVHJpZ2dlcnMuZm9yRWFjaCgodHJpZ2dlcik9PntcclxuICAgIHRyaWdnZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcclxuICAgICAgY29uc3QgaWQgPSB0aGlzLmRhdGFzZXQub3BlblxyXG4gICAgICBjb25zdCBtb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYC5tb2RhbFtkYXRhLW1vZGFsPSR7aWR9XWApO1xyXG4gICAgICAkKG1vZGFsKS5pemlNb2RhbCgnb3BlbicpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbiAgXHJcbiAgY2FsY3VsYXRvclNlbGVjdHMuZm9yRWFjaCgoc2VsZWN0KT0+e1xyXG5cclxuICAgIHNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT57XHJcbiAgICAgIHNlbGVjdC5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpID8gXHJcbiAgICAgIHNlbGVjdC5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKSA6IHNlbGVjdC5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKVxyXG4gICAgfSk7XHJcbiAgXHJcbiAgfSk7XHJcbiAgXHJcblxyXG4gIGlmKG1hcENvbnRhaW5lcikge1xyXG4gICAgICAgIGNvbnN0IGluaXQgPSBmdW5jdGlvbiBpbml0KCkge1xyXG4gICAgICAgICAgY29uc3QgbXlNYXAgPSBuZXcgeW1hcHMuTWFwKFwibWFwXCIsIHtcclxuICAgICAgICAgICAgY2VudGVyOiBbNjAuMDI4OTc5LCAzMC4zMzExOTVdLFxyXG4gICAgICAgICAgICB6b29tOiAxNixcclxuICAgICAgICAgICAgY29udHJvbHM6IFtcInpvb21Db250cm9sXCJdLFxyXG4gICAgICAgICAgfSk7XHJcbiAgICBcclxuICAgICAgICAgIGNvbnN0IG15UGxhY2VtYXJrID0gbmV3IHltYXBzLlBsYWNlbWFyayhcclxuICAgICAgICAgICAgWzYwLjAyODk3OSwgMzAuMzMxMTk1IF0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICBiYWxsb29uQ29udGVudDogXCLQsy4g0KHQsNC90LrRgi3Qn9C10YLQtdGA0LHRg9GA0LMsINGD0LsuINCV0YHQtdC90LjQvdCwIDHQujEsINGB0YIu0LwuINCe0LfQtdGA0LrQuFwiLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgaWNvbkltYWdlSHJlZjogXCIvaW1nL21hcmtlci5zdmdcIixcclxuICAgICAgICAgICAgICBpY29uTGF5b3V0OiBcImRlZmF1bHQjaW1hZ2VcIixcclxuICAgICAgICAgICAgICBpY29uSW1hZ2VTaXplOiBbNDIsIDU2XSxcclxuICAgICAgICAgICAgICBpY29uSW1hZ2VPZmZzZXQ6IFstMjEsIC01Nl0sXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICk7XHJcbiAgICAgICAgICBteU1hcC5nZW9PYmplY3RzLmFkZChteVBsYWNlbWFyayk7XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIG1hcENvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcueW1hcHMtMi0xLTc3LWdyb3VuZC1wYW5lJykuZm9yRWFjaCgoZWxlbWVudCk9PntcclxuICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLmZpbHRlciA9ICdncmF5c2NhbGUoMSknO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB5bWFwcy5yZWFkeShpbml0KTsgICAgICBcclxuICAgICAgfVxyXG59KTtcclxuXHJcbi8vIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCAoKSA9PiB7XHJcbi8vICAgY29uc29sZS5sb2coIHdpbmRvdy5pbm5lcldpZHRoKTtcclxuLy8gfSlcclxuIl19
