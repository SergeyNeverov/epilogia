'use strict';

document.addEventListener('DOMContentLoaded', function () {
  var mapContainer = document.getElementById('map');
  var modalsSelector = document.querySelectorAll('.modal');
  var modalTriggers = document.querySelectorAll('.modal-trigger');
  var calculatorSelects = document.querySelectorAll('.calculator-select');
  var sliders = document.querySelectorAll('.slider');
  var timers = document.querySelectorAll('.timer');
  var accordeonButtons = document.querySelectorAll('.accordeon__title');
  var maskedPhones = document.querySelectorAll('input[data-masked="phone"]');
  var modals = document.querySelectorAll('.modal');

  svg4everybody();
  modalsSelector.forEach(function (element) {
    $(element).iziModal();
  });

  modalTriggers.forEach(function (trigger) {
    trigger.addEventListener('click', function () {
      var id = this.dataset.open;
      var modal = document.querySelectorAll('.modal[data-modal=' + id + ']');
      $(modal).iziModal('open');
    });
  });

  var i = 0;
  calculatorSelects.forEach(function (select) {
    select.addEventListener('click', function () {
      var sum = 0;
      var sumWithoutSale = 0;
      var count = document.querySelectorAll('.calculator-select.active');
      var textCount = document.querySelector('p[data-calculator-count=""]');
      var totalPrice = document.querySelector('strong[data-calculator-total=""]');
      var totalPriceWithoutSale = document.querySelector('span[data-calculator-sale=""]');
      var price = +select.dataset.price;
      var priceWithoutSale = +select.dataset.sale;

      if (select.classList.contains('active')) {
        i--;
        select.classList.remove('active');
        sum -= price;
        sumWithoutSale -= priceWithoutSale;
        textCount.innerHTML = i;
        count.forEach(function (current) {
          var price = +current.dataset.price;
          var priceWithoutSale = +current.dataset.sale;
          sum += price;
          sumWithoutSale += priceWithoutSale;
          return sum, sumWithoutSale;
        });
      } else {
        i++;
        select.classList.add('active');
        sum += price;
        sumWithoutSale += priceWithoutSale;
        textCount.innerHTML = i;
        count.forEach(function (current) {
          var price = +current.dataset.price;
          var priceWithoutSale = +current.dataset.sale;
          sum += price;
          sumWithoutSale += priceWithoutSale;
          return sum, sumWithoutSale;
        });
      }
      totalPrice.innerHTML = sum + ' р.';
      totalPriceWithoutSale.innerHTML = sumWithoutSale + 'р.';
    });
  });

  sliders.forEach(function (slider) {
    var sliderInit = slider.querySelector('.slider__list');
    var count = sliderInit.getAttribute('data-count');
    var nextArrow = slider.querySelector('.arrow-next');
    var prevArrow = slider.querySelector('.arrow-prev');
    $(sliderInit).slick({
      slidesToShow: +count,
      dots: false,
      prevArrow: $(prevArrow),
      nextArrow: $(nextArrow)
    });
  });

  timers.forEach(function (timer) {
    var getTimeRemaining = function getTimeRemaining(endtime) {
      var t = Date.parse(endtime) - Date.parse(new Date());
      var seconds = Math.floor(t / 1000 % 60);
      var minutes = Math.floor(t / 1000 / 60 % 60);
      var hours = Math.floor(t / (1000 * 60 * 60) % 24);
      var days = Math.floor(t / (1000 * 60 * 60 * 24));
      return {
        'total': t,
        'days': days,
        'hours': hours,
        'minutes': minutes,
        'seconds': seconds
      };
    };

    var initializeClock = function initializeClock(endtime) {
      var clock = timer;
      var daysSpan = clock.querySelector('.timer__day');
      var hoursSpan = clock.querySelector('.timer__hours');
      var minutesSpan = clock.querySelector('.timer__minutes');
      var secondsSpan = clock.querySelector('.timer__seconds');

      var updateClock = function updateClock() {
        var t = getTimeRemaining(endtime);

        daysSpan.innerHTML = t.days;
        hoursSpan.innerHTML = ('0' + t.hours).slice(-2);
        minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
        secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);

        if (t.total <= 0) {
          clearInterval(timeinterval);
        }
      };
      updateClock();
      var timeinterval = setInterval(updateClock, 1000);
    };
    var deadline = new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000);
    initializeClock(deadline);
  });

  accordeonButtons.forEach(function (accordeon) {
    accordeon.addEventListener('click', function () {
      accordeonButtons.forEach(function (accordeon) {
        accordeon.classList.remove('open');
        accordeon.closest('.accordeon').classList.remove('open');
      });
      accordeon.classList.add('open');
      accordeon.closest('.accordeon').classList.add('open');
      document.querySelector('.faq').scrollIntoView({ behavior: 'smooth' });
    });
  });

  var customOptions = {
    onKeyPress: function onKeyPress(val, e, field, options) {
      if (val.replace(/\D/g, "").length === 2) {
        val = val.replace("8", "");
        field.val(val);
      }
      field.mask("+7 (999) 999-99-99", options);
    },
    placeholder: "+7 (___) ___-__-__"
  };

  maskedPhones.forEach(function (input) {
    $(input).mask("+7 (000) 000-00-00", customOptions);
  });

  modals.forEach(function (modal) {
    var input = modal.querySelector('input[data-masked="phone"]');
    $(input).mask("+7 (000) 000-00-00", customOptions);
  });

  if (mapContainer) {
    var init = function init() {
      var myMap = new ymaps.Map("map", {
        center: [60.028979, 30.331195],
        zoom: 16,
        controls: ["zoomControl"]
      });

      var myPlacemark = new ymaps.Placemark([60.028979, 30.331195], {
        balloonContent: "г. Санкт-Петербург, ул. Есенина 1к1, ст.м. Озерки"
      }, {
        iconImageHref: "/img/marker.svg",
        iconLayout: "default#image",
        iconImageSize: [42, 56],
        iconImageOffset: [-21, -56]
      });
      myMap.geoObjects.add(myPlacemark);

      mapContainer.querySelectorAll('.ymaps-2-1-77-ground-pane').forEach(function (element) {
        element.style.filter = 'grayscale(1)';
      });
    };
    ymaps.ready(init);
  }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
